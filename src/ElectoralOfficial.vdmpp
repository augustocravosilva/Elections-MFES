class ElectoralOfficial

types
	public Card = token;
	

instance variables
	public machine: VotingMachine;
	private register: Election`Register;  ----- TODO: funçao de inicializaçao e blabla
	public vcard: Card;
	public vcardSet: bool := false;
	
	
operations

	public ElectoralOfficial: () ==> ElectoralOfficial
		ElectoralOfficial() == (
			machine := new VotingMachine();
			return self
		);
	
	public 
	
	-- Validate person
	-- R1: "person" must be in electoral register
	-- R2: "person" must not had voted already
	public validatePerson: Election`Person ==> Card
		validatePerson(person) == (
			register := register ++ { person |-> true };
			return vcard;
			)
	pre person in set dom register and
		register(person) = false
	post register(person) = true;
	
	
	-- Initialize voting machines		
	public initializeMachines: VotingMachine ==> ()
		initializeMachines(mach) ==
			machine := mach;
	
	-- Validation card for the voting machine
	public setCard: Card ==> ()
		setCard(car) == (
			vcard := car;
			machine.setCards(car);
			vcardSet := true;
		)
	pre vcardSet = false
	post machine.vcard = car 
		and vcard = car
		and vcardSet
		and machine.vcardSet;
			
			
	public setRegister: Election`Register ==> ()
		setRegister(reg) ==
			 register := reg;
			 
	public getRegister: () ==> Election`Register
		getRegister() ==
			 return register;
			 
	public getMachine: () ==> VotingMachine
		getMachine() ==
			 return machine;
			 
 
functions


end ElectoralOfficial