class ElectoralOfficial

types
	public Card = token;
	

instance variables
	public machine: VotingMachine := new VotingMachine();
	public register: Election`Register := { |-> };
	public vcard: Card := mk_token(1);
	public vcardSet: bool := false;
	
	
operations

	-- ElectoralOfficial class constructor
	-- returns created object 
	public ElectoralOfficial: () ==> ElectoralOfficial
		ElectoralOfficial() == (
			return self
		); 
	
	-- Validate person
	-- R1: "person" must be in electoral register
	-- R2: "person" must not had voted already
	public validatePerson: Election`Person ==> [Card]
		validatePerson(person) == (
			register := register ++ { person |-> true };
			return vcard;
			)
	pre person in set dom register and --TO
		register(person) = false
	post register(person) = true;
	
	-- Validation card for the voting machine
	public setCard: Card ==> ()
		setCard(car) == (
			vcard := car;
			vcardSet := true;
			machine.setCards(car);
		)
	pre vcardSet = false
	post machine.vcard = car 
		and machine.vcardSet
		and vcard = car
		and vcardSet;
	
	-- Initialize register	
	public setRegister: Election`Register ==> ()
		setRegister(reg) ==
			 register := reg;
	---- TODO pre/post?		 
			 
end ElectoralOfficial