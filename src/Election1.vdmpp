class Election1

types
	public Person = token;
	
	
values
-- TODO Define values here


instance variables
	public static electoralRegister: map Person to bool := {|->};
	--private officials: set of ElectoralOfficial := {};
	private officials: ElectoralOfficial;

operations
	-- Election class constructor
	-- returns created object 
	public Election1: () ==> Election1
		Election1() == 
			return self;
			
	-- Possible voters initialization
	-- R1: every Person in argument "reg" must not had voted
	-- R2: every Person in "electoralRegister" must not had voted
	public setRegister: map Person to bool ==> ()
		setRegister(reg) ==
			 electoralRegister := reg
	pre forall voted in set rng reg & voted = false
	post forall voted in set rng electoralRegister & voted = false;
	
	-- Electoral officials initialization
	public setOfficials: ElectoralOfficial ==> ()
		setOfficials(off) ==
			 officials := off;
	
	--public startElection: () ==> ()
		--startElection() ==
			
	--public finishElection: () ==> ()
		--finishElection() ==
		
		
functions
-- TODO Define functiones here


traces
-- TODO Define Combinatorial Test Traces here


end Election1